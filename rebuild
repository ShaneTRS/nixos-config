#!/usr/bin/env nix
#!nix shell --extra-experimental-features ``nix-command flakes`` --command bash

SRC="${SRC:-$HOME/.config/nixos}"
SECRETS="${SECRETS:-$SRC/secrets}"
MACHINE="${MACHINE:-machine.toml}"

INTERACTIVE=${INTERACTIVE:-true}
COMMIT=${COMMIT:-true}
UPDATE=${UPDATE:-false}

# Should probably fallback to "su -c" instead
SUDO="${SUDO:-$(which doas &>/dev/null && echo doas || echo sudo)}"

cd "$SRC" || exit 1

if ugrep --quiet 'serial ?= ?""' "$MACHINE"; then
  echo Serial number is missing! Grabbing from system..
  SERIAL=$($SUDO cat /sys/devices/virtual/dmi/id/board_serial || exit)
  sed -i -E "s:serial ?= ?\"\":serial = \"$SERIAL\":g" "$MACHINE"
  HW_CONF="hardware/$SERIAL.nix"
  if ! [ -f "$HW_CONF" ]; then
    printf "# %s (%s)\n{ }\n" \
      "$(cat /sys/devices/virtual/dmi/id/product_name)" \
      "$(cat /sys/devices/virtual/dmi/id/product_version)" > "$HW_CONF"
    echo "Hardware config is missing! The build will fail."
    exit 1
  fi
fi

build() { $SUDO nixos-rebuild "$@" --flake "git+file://$SRC?submodules=1#default" --log-format internal-json 2>&1 | nom --json; }
machine() { awk -F'"' "/$1 ?=/{print \$2}" "$MACHINE"; }

track() {
  if [ "$1" == "add" ]; then
    git update-index --really-refresh "${@:2}"
  elif [ "$1" == "rm" ]; then
    git restore --staged "${@:2}"
    git update-index --assume-unchanged --skip-worktree "${@:2}"
  fi
}

update-repo() {(
  cd "$1" || exit 1
  git add -A; git update-index --refresh >/dev/null
  git diff-index --quiet HEAD -- ||
    git commit -am "AUTO: Configuration updated"
)}

# shellcheck disable=SC3010
if ! git diff-index --quiet HEAD -- &&
  $INTERACTIVE && ! git diff --color-words |
    awk '!/--- a|+++ b|index [0-9a-z]{6}/ {print $0}' | less -RK;
then 
  echo "Cancelled configuration update";
  exit 1
fi

$UPDATE && nix flake update
IFS=: read -ra SKIP <<< "$SKIP"
track add "$MACHINE" "${SKIP[@]}"
BUILD=$(build "$@" && echo 1)
track rm "$MACHINE" "${SKIP[@]}"

if $COMMIT && [ -n "$BUILD" ] && [ "$1" != "test" ]; then
  update-repo .
  update-repo secrets
fi

MACHINE_USER="$(machine user)"
MACHINE_PROFILE="$(machine profile)"; [ -z "$MACHINE_PROFILE" ] &&
  MACHINE_PROFILE="$(machine hostname)"

# Symlink the secret user home directory
ln -sf "$SECRETS/home/." "$SRC/homes/secrets" 2>/dev/null
"$SRC/homes/symlink" \
  "secrets/$MACHINE_PROFILE/." "secrets/all/." \
  "$MACHINE_USER/$MACHINE_PROFILE" "$MACHINE_USER/all" \
  "global/$MACHINE_PROFILE" "global/all"

exec true